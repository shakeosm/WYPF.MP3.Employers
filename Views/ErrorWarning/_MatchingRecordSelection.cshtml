@model MCPhase3.Models.GetMatchesViewModel
@{
    bool niAvailable = true;
}
<div class="border shadow-lg p-4 mb-4 bg-white">    
    <label>Employer: <b>@Model.EmployersName</b></label>
    <style>
        .TextBoxAsLabel {
            border: none;
            background-color: #fff;
            background: transparent;
        }
    </style>

    <form asp-action="UpdateUsingManualMatch" id="myForm" method="post">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <h3>Contributions Data Received</h3>
        <div class="form-group">

            <table class="table table-bordered">
                <thead class="thead-light">
                    <tr>
                        <th>Forenames</th>
                        <th>Surname</th>
                        <th>NI Number</th>
                        <th>Date of Birth</th>
                        <th>PostCode</th>
                        <th>FolderRef</th>
                        <th>PayLocation</th>
                        @*<th>Status</th>*@
                        <th>Date Joined</th>
                        <th>Date Left</th>
                        <th>PayRef</th>
                        @*<th>ServiceType</th>*@

                        <th>PostRef</th>
                        <th>Hours</th>
                        <th>Job Title</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>@Model.MemberRecord.forenames</td>
                        <td>@Model.MemberRecord.lastName</td>
                        <td><b>@Model.MemberRecord.NI</b></td>
                        <td>
                            @Model.MemberRecord.DOB?.ToString("dd/MM/yyyy")
                        </td>
                        <td>@Model.MemberRecord.postCode</td>
                        <td>@Model.MemberRecord.memberNo</td>
                        <td>@Model.MemberRecord.employerName</td>
                        @*<td></td>*@
                        <td>
                            @Model.MemberRecord.dateJoined?.ToString("dd/MM/yyyy")
                        </td>
                        <td>
                            <b>
                                @Model.MemberRecord?.dateLeft?.ToString("dd/MM/yyyy")
                            </b>
                        </td>
                        <td>@Model.MemberRecord.payRef</td>

                        <td>@Model.MemberRecord.postRef</td>

                        <td>@Model.MemberRecord.HOURS_CONCATENATED</td>
                        <td>@Model.MemberRecord.jobTitle</td>
                    </tr>
                </tbody>
            </table>

            <br />

            <h3>Potential Matches</h3>
            <p>Select one option</p>
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead class="thead-light">
                        <tr>
                            @*<th style="color:red;">Create new folder for this person</th>*@
                            <th>Forenames</th>
                            <th>Surname</th>
                            <th>NI Number</th>
                            <th>Date of Birth</th>
                            <th>PostCode</th>
                            @*<th>Job Title</th>*@

                        </tr>
                    </thead>
                    <tbody>
                        <!--if a new record does not match to any record in UPM then show view file record to create new folder-->
                        @if (Model.MatchingPersonList.Count() == 0)
                        {
                            @Html.RadioButtonFor(m => Model.ActiveProcess, "AddNewFolder" + 1002, new { id = "LooseMatch", @class = "radio", @checked = "checked" })
                        }
                        else
                        {
                            int i = 0;
                            @for (var j = 0; j < Model.MatchingPersonList.Count(); j = i)
                            {
                                //check if NI number does not match to posting file and upm record then

                                <tr id="checkboxDiv">
                                    <!--<td>-->
                                    @*<p style="color:red;">Create new folder for this person</p>*@
                                    <!--@Html.RadioButtonFor(m => Model.ActiveProcess, "AddNewFolder" + Model.MatchingPersonList[j].personId, new { id = "LooseMatch", @class = "radio", @checked = "checked" })
                                    </td>-->
                                    <td> @Html.TextBoxFor(modelItem => Model.MatchingPersonList[j].upperForeNames, new { @readonly = "readonly", @class = "TextBoxAsLabel" })@*<input asp-for="@m.upperForeNames" id="foreName" class="form-control">*@</td>
                                    <td> @Html.TextBoxFor(modelItem => Model.MatchingPersonList[j].upperSurName, new { @readonly = "readonly", @class = "TextBoxAsLabel" })</td>
                                    <td> @Html.TextBoxFor(modelItem => Model.MatchingPersonList[j].NINO, new { @readonly = "readonly", @class = "TextBoxAsLabel" })</td>
                                    <td> @Html.TextBoxFor(modelItem => Model.MatchingPersonList[j].DOB, "{0:dd/MM/yyyy}", new { @readonly = "readonly", @class = "TextBoxAsLabel" })</td>
                                    <td> @Html.TextBoxFor(modelItem => Model.MatchingPersonList[j].postCode, new { @readonly = "readonly", @class = "TextBoxAsLabel" })</td>
                                </tr>
                                <table class="table table-bordered table-responsive">
                                    <thead class="thead-light">
                                        <tr>
                                            <th style="color:red;">Select Folder</th>
                                            <th>FolderRef</th>
                                            <th>PayLocation</th>
                                            <th>Status</th>
                                            <th>Date Joined</th>
                                            <th>Date Left</th>
                                            <th>PayRef</th>
                                            <th>PostRef</th>
                                            <th>Hours</th>
                                            <th>Job Title</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @*get the number of folders attached with the showing person*@

                                        @for (var k = 0; k < Model.MatchingPersonList.Count(); k++)
                                        {
                                            @if (Model.MatchingPersonList[k].personId == Model.MatchingPersonList[j].personId)
                                            {
                                                <!--following NI check will be applied to check if NI is matched with received records-->
                                                if (@Model.MemberRecord.NI == Model.MatchingPersonList[j].NINO)
                                                {
                                                    niAvailable = true;
                                                }
                                                <tr id="checkboxDiv_"@k>
                                                    <td>
                                                        @Html.RadioButtonFor(m => Model.ActiveProcess, "UpdateFolder" + Model.MatchingPersonList[k].folderId, new { id = "LooseMatch", @class = "radio" })

                                                        @Html.HiddenFor(modelItem => Model.MatchingPersonList[k].dataRowId)
                                                        @Html.HiddenFor(modelItem => Model.MatchingPersonList[k].personId)
                                                        @Html.HiddenFor(modelItm => Model.MatchingPersonList[k].personMatch)
                                                        @Html.HiddenFor(modelItem => Model.MatchingPersonList[k].personMatchType)
                                                        @Html.HiddenFor(modelItem => Model.MatchingPersonList[k].folderId)
                                                        @Html.HiddenFor(modelItm => Model.MatchingPersonList[k].folderMatch)
                                                        @Html.HiddenFor(modelItem => Model.MatchingPersonList[k].note)

                                                        @Html.HiddenFor(modelItm => Model.MatchingPersonList[k].userId)
                                                        @Html.HiddenFor(modelItm => Model.MatchingPersonList[k].serviceId)
                                                        @Html.HiddenFor(modelItm => Model.MatchingPersonList[k].serviceTypeFG)
                                                    </td>
                                                    <td>@Model.MatchingPersonList[k].folderRef</td>
                                                    <td>@Model.MatchingPersonList[k].payLocationName</td>
                                                    <td>@Model.MatchingPersonList[k].statusDesc</td>
                                                    <td>@Model.MatchingPersonList[k].dateJoined?.ToShortDateString()</td>
                                                    <td>@Model.MatchingPersonList[k].dateLeft?.ToShortDateString()</td>
                                                    <td>@Model.MatchingPersonList[k].payRef</td>
                                                    <td>@Model.MatchingPersonList[k].postRef</td>
                                                    <td>@Model.MatchingPersonList[k].HOURS_CONCATENATED</td>
                                                    <td>@Model.MatchingPersonList[k].jobTitle</td>
                                                </tr>
                                            }
                                            i++;
                                        }
                                    </tbody>
                                </table>                                
                            }
                        }
                    </tbody>
                </table>
            </div>

            <!-- Notes section for user -->
            <div class="mt-2 p-2">
                Choose a UPM record to match to from the above list.
                If WYPF’s person data differs we will update it to match the contributions.
            </div>

            <div class="mt-2 p-2">
                Confirm that a new person should be created from the contributions data. Only available if NI number is not already on file at WYPF.
                <br />
                @{
                    if (!niAvailable)
                    {
                        @Html.RadioButtonFor(m => Model.ActiveProcess, "AddNewPersonAndFolder", new { id = "LooseMatch", @class = "radio" })
                        @*<input type="radio" onclick="myFunction()">*@
                    }
                }
            </div>

            <!--PopUp text will be passed to following input item to upload to database-->
            <input type="hidden" value="" name="myValue" id="myValue">
            <div class="row p-4">
                <div class="col-lg">
                    <button asp-action="Index" class="btn btn-primary form-control ">Cancel</button>
                </div>
                <div class="col-lg">
                    <button class="btn btn-success form-control col-sm-6" type="submit" id="btnSubmit">Submit</button>
                </div>

            </div>

        </div>
    </form>
</div>

@section scripts {
    <script src="~/js/new-matching-criteria.js"></script>
}