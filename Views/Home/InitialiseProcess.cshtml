@* 
    Description: this was the initial design- where- ReturnInitialise and Automatch- all were hapenning in the same call and getting long queued and waiting unlimited time..
    This has been abandoned.. and started to use 'InitialiseProcessWithSteps.cshtml'
*@
@model MCPhase3.Models.InitialiseProcessResultVM
@{
    ViewData["Title"] = "Summary";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="border shadow-lg p-4 mb-4 bg-white">
    <div class="container-fluid bg-3 text-center">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-11 col-sm-9 col-md-12 col-lg-12 col-xl-5 text-center p-0 mt-3 mb-2">
                    <div class="card px-0 pt-4 pb-0 mt-3 mb-3">

                        <!-- progressbar -->
                        <ul id="progressbar">
                            <li class="active" id="account"><strong>File Upload</strong></li>
                            <li class="active" id="personal"><strong>Check Totals</strong></li>
                            <li class="active" id="personal"><strong>Data Processing</strong></li>
                            <li id="personal"><strong>Error and Warning Summary</strong></li>
                            <li id="personal"><strong>Bulk Approval</strong></li>
                            <li id="payment"><strong>Submit to Database</strong></li>
                            <li id="confirm"><strong>Finish</strong></li>
                        </ul>


                    </div>
                </div>
            </div>
        </div>
    </div>
    @*<div class="border shadow-lg p-4 mb-4 bg-white">*@
        <!--Folloing container will show total records inserted into Database and number of records in file-->
        <div class="container" id="myDiv1">
            <div class="jumbotron">
            @if (string.IsNullOrEmpty(Model.ErrorMessage))
                {
                    <div class="table-bordered">
                        <div class="alert alert-success">
                            <h3>@Model.EmployeeName</h3><br />
                            <h3>File Loaded to WYPF Database successfully</h3><br />
                            <p style="font-size:small;">Now records ready for matching.</p>
                            @Html.Raw(Model.ShowProcessedInfo)
                        </div>
                    </div>
                }
                else
                {
                    <div class="table-bordered">
                        <div class="alert alert-danger">
                            @Html.Raw(Model.ErrorMessage))
                        </div>
                    </div>
                }
                <p style="font-size:small;">Please click to see the Auto Match records with WYPF members records.</p><br />

                <button class="btn btn-primary" onclick="myFunction()">Next</button>
            </div>
        </div>



    <div class="container" id="myDiv2" style="display:none;">
        <div class="jumbotron">
            <h3>Data Summary</h3>
            <p style="font-size:small;">Page displayed after financial totals have been accepted</p><br />
            @if (string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="table-bordered">
                    <div class="alert alert-primary">
                        <h3>@ViewBag.empName</h3><br />
                        <h3>File Loaded and Checked</h3><br />
                        @Html.Raw(Model.ShowMatchingResult)
                    </div>
                    <div class="alert alert-info">
                        <h3>Error and Warnings</h3>
                        <p style="font-size:small;">Shows all data alerts and their count.   User may return or show list of all records with specific alert.</p><br />
                    </div>
                    <a href="/ErrorWarning/index?remittanceID=@Model.EncryptedRemittanceId" class="btn btn-primary mr-2">View errors and warnings summary</a>
                    
                    <a href="/Admin/Home" class="btn btn-danger">Dashboard</a>
                </div>
            }

            else
            {
                <div class="table-bordered">
                    <div class="alert alert-danger">
                        @Html.Raw(Model.ErrorMessage)
                    </div>
                </div>
            }

        </div>
    </div>
</div>

<script>  
    function myFunction() {
        var x = document.getElementById("myDiv1");
        var y = document.getElementById("myDiv2");
        if (y.style.display === "none") {
            y.style.display = "block";
            x.style.display = "none";
        } 
    }  

</script>